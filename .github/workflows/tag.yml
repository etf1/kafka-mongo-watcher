name: Push (tag)

on:
  push:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: [ '1.14', '1.15', '1.16' ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}

      - name: Install go dependencies & run tests
        shell: script -q -e -c "bash {0}"
        run: |
          go get -t -v ./...
          go test -v -cover -tags=ci ./...

  release:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Create release
        id: create
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create.outputs.upload_url }}

  upload-binaries:
    needs: release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: 386
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm
          - os: macos-latest
            goos: darwin
            goarch: amd64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Download go dependencies
        run: go get -t -v ./...

      - name: Create release
        run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags "-s -w -X main.Version=${{ github.ref }}" -o kafka-mongo-watcher-${{ matrix.goos }}-${{ matrix.goarch }} ./...

      - name: Upload release assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./kafka-mongo-watcher-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_name: kafka-mongo-watcher-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream
